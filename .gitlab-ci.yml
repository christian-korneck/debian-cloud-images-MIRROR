---
stages:
  - source test
  - build
  - vendor upload
  - upload

variables:
  CLOUD_IMAGE_BUILD_ID: ${CI_PROJECT_NAMESPACE}-${CI_COMMIT_REF_SLUG}
  GIT_DEPTH: "1"

before_script:
  - apt-get update
  - apt-get install --no-install-recommends -y python3-libcloud python3-marshmallow qemu-utils
  - |
    if [ "$CI_DISPOSABLE_ENVIRONMENT" ]; then
      # Workaround unsupported SEEK_HOLE in overlayfs (Docker default)
      mount -t tmpfs none /tmp
    fi

test flake8:
  stage: source test
  image: debian:buster
  script:
    - >
      apt-get install --no-install-recommends -y
      python3-flake8
    - python3 -m flake8
  only:
    - pushes

test package:
  stage: source test
  image: debian:buster
  script:
    - apt-get build-dep -y ./
    - >
      apt-get install --no-install-recommends -y
      lintian
    - DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -us -uc
    - lintian ../*.changes
  only:
    - pushes

test pytest:
  stage: source test
  image: debian:buster
  script:
    - >
      apt-get install --no-install-recommends -y
      python3-pytest python3-pytest-cov
    - >
      PYTHONPATH=src
      py.test-3
      -vrxXs
      --color=yes
      --cov=src --cov-report=term --cov-report=html:coverage
      --junit-xml=junit.xml
      tests
  artifacts:
    paths:
      - coverage/
    reports:
      junit: junit.xml
  only:
    - pushes

test pytest latest:
  stage: source test
  image: python:slim
  before_script:
    - pip install -e .
  script:
    - python3 ./setup.py pytest
  only:
    - pushes

.build:
  stage: build
  image: debian:buster
  script:
    - >
      apt-get install --no-install-recommends -y
      binfmt-support ca-certificates debsums dosfstools fai-server fai-setup-storage make python3-pytest qemu-user-static qemu-utils udev
    - |
      if [ "$CI_DISPOSABLE_ENVIRONMENT" ]; then
        # Some of our build environments run with SELinux enabled, make sure it is detected by all the tools
        if [ -d /sys/fs/selinux ]; then mount -t selinuxfs none /sys/fs/selinux; mkdir -p /etc/selinux; touch /etc/selinux/config; fi
      fi
    - >
      echo
      debian-cloud-images build
      --build-id ${CLOUD_IMAGE_BUILD_ID}
      --build-type ${CLOUD_IMAGE_TYPE}
      --version ${CI_PIPELINE_IID}
      ${CLOUD_RELEASE} ${CLOUD_VENDOR} ${CLOUD_ARCH}
    - >
      ./bin/debian-cloud-images build
      --build-id ${CLOUD_IMAGE_BUILD_ID}
      --build-type ${CLOUD_IMAGE_TYPE}
      ${CLOUD_RELEASE} ${CLOUD_VENDOR} ${CLOUD_ARCH}
    - 'xz -vk5T0 *.tar'
  artifacts:
    name: debian-${CLOUD_RELEASE}-${CLOUD_VENDOR}-${CLOUD_ARCH}
    expire_in: 7 days
    paths:
      - '*.build.json'
      - '*.info'
      - '*.tar.xz'
    reports:
      junit: '*.build.junit.xml'

####
# Different selections when builds will be done
####

.build dev manual:
  extends: .build
  only:
    - web
  variables:
    CLOUD_IMAGE_TYPE: dev

.build dev pushes:
  extends: .build
  only:
    - pushes
  variables:
    CLOUD_IMAGE_TYPE: dev

.build official:
  extends: .build
  only:
    - schedules@cloud-team/debian-cloud-images
  tags:
    - debian-cloud-images-build
  variables:
    CLOUD_IMAGE_TYPE: official

####
# Builds for developer uploads pushes
####

azure stretch build: &build-azure-stretch
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: azure

azure stretch-backports build: &build-azure-stretch-backports
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch-backports
    CLOUD_VENDOR: azure

azure buster build: &build-azure-buster
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: azure

azure buster-backports build: &build-azure-buster-backports
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster-backports
    CLOUD_VENDOR: azure

azure bullseye build: &build-azure-bullseye
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: bullseye
    CLOUD_VENDOR: azure

azure sid build: &build-azure-sid
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: azure

ec2 stretch amd64 build: &build-ec2-amd64-stretch
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: ec2

ec2 buster amd64 build: &build-ec2-amd64-buster
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: ec2

ec2 bullseye amd64 build: &build-ec2-amd64-bullseye
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: bullseye
    CLOUD_VENDOR: ec2

ec2 sid amd64 build: &build-ec2-amd64-sid
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: ec2

ec2 stretch arm64 build: &build-ec2-arm64-stretch
  extends: .build dev manual
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: ec2

ec2 buster arm64 build: &build-ec2-arm64-buster
  extends: .build dev manual
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: ec2

ec2 bullseye arm64 build: &build-ec2-arm64-bullseye
  extends: .build dev manual
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: bullseye
    CLOUD_VENDOR: ec2

ec2 sid arm64 build: &build-ec2-arm64-sid
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: ec2

gce stretch build: &build-gce-stretch
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: gce

gce buster build: &build-gce-buster
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: gce

gce bullseye build: &build-gce-bullseye
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: bullseye
    CLOUD_VENDOR: gce

gce sid build: &build-gce-sid
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: gce

generic buster amd64 build: &build-generic-buster-amd64
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: generic

generic bullseye amd64 build: &build-generic-bullseye-amd64
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: bullseye
    CLOUD_VENDOR: generic

generic sid amd64 build: &build-generic-sid-amd64
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: generic

generic buster arm64 build: &build-generic-buster-arm64
  extends: .build dev manual
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: generic

generic bullseye arm64 build: &build-generic-bullseye-arm64
  extends: .build dev manual
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: bullseye
    CLOUD_VENDOR: generic

generic sid arm64 build: &build-generic-sid-arm64
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: generic

generic buster ppc64el build: &build-generic-buster-ppc64el
  extends: .build dev manual
  variables:
    CLOUD_ARCH: ppc64el
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: generic

generic bullseye ppc64el build: &build-generic-bullseye-ppc64el
  extends: .build dev manual
  variables:
    CLOUD_ARCH: ppc64el
    CLOUD_RELEASE: bullseye
    CLOUD_VENDOR: generic

generic sid ppc64el build: &build-generic-sid-ppc64el
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: ppc64el
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: generic

genericcloud buster amd64 build: &build-genericcloud-buster-amd64
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: genericcloud

genericcloud bullseye amd64 build: &build-genericcloud-bullseye-amd64
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: bullseye
    CLOUD_VENDOR: genericcloud

genericcloud sid amd64 build: &build-genericcloud-sid-amd64
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: genericcloud

nocloud stretch amd64 build: &build-nocloud-stretch-amd64
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: stretch
    CLOUD_VENDOR: nocloud

nocloud buster amd64 build: &build-nocloud-buster-amd64
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: buster
    CLOUD_VENDOR: nocloud

nocloud bullseye amd64 build: &build-nocloud-bullseye-amd64
  extends: .build dev manual
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: bullseye
    CLOUD_VENDOR: nocloud

nocloud sid amd64 build: &build-nocloud-sid-amd64
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: amd64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: nocloud

nocloud sid arm64 build: &build-nocloud-sid-arm64
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: arm64
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: nocloud

nocloud sid ppc64el build: &build-nocloud-sid-ppc64el
  extends: .build dev pushes
  variables:
    CLOUD_ARCH: ppc64el
    CLOUD_RELEASE: sid
    CLOUD_VENDOR: nocloud

####
# Official builds done on Debian hardware
####

azure stretch build official:
  <<: *build-azure-stretch
  extends: .build official

azure stretch-backports build official:
  <<: *build-azure-stretch-backports
  extends: .build official

azure buster build official:
  <<: *build-azure-buster
  extends: .build official

azure bullseye build official:
  <<: *build-azure-bullseye
  extends: .build official

azure buster-backports build official:
  <<: *build-azure-buster-backports
  extends: .build official

azure sid build official:
  <<: *build-azure-sid
  extends: .build official

ec2 stretch amd64 build official:
  <<: *build-ec2-amd64-stretch
  extends: .build official

ec2 buster amd64 build official:
  <<: *build-ec2-amd64-buster
  extends: .build official

ec2 bullseye amd64 build official:
  <<: *build-ec2-amd64-bullseye
  extends: .build official

ec2 sid amd64 build official:
  <<: *build-ec2-amd64-sid
  extends: .build official

ec2 stretch arm64 build official:
  <<: *build-ec2-arm64-stretch
  extends: .build official

ec2 buster arm64 build official:
  <<: *build-ec2-arm64-buster
  extends: .build official

ec2 bullseye arm64 build official:
  <<: *build-ec2-arm64-bullseye
  extends: .build official

ec2 sid arm64 build official:
  <<: *build-ec2-arm64-sid
  extends: .build official

gce stretch build official:
  <<: *build-gce-stretch
  extends: .build official

gce buster build official:
  <<: *build-gce-buster
  extends: .build official

gce bullseye build official:
  <<: *build-gce-bullseye
  extends: .build official

gce sid build official:
  <<: *build-gce-sid
  extends: .build official

generic buster amd64 build official:
  <<: *build-generic-buster-amd64
  extends: .build official

generic bullseye amd64 build official:
  <<: *build-generic-bullseye-amd64
  extends: .build official

generic sid amd64 build official:
  <<: *build-generic-sid-amd64
  extends: .build official

generic buster arm64 build official:
  <<: *build-generic-buster-arm64
  extends: .build official

generic bullseye arm64 build official:
  <<: *build-generic-bullseye-arm64
  extends: .build official

generic sid arm64 build official:
  <<: *build-generic-sid-arm64
  extends: .build official

generic buster ppc64el build official:
  <<: *build-generic-buster-ppc64el
  extends: .build official

generic bullseye ppc64el build official:
  <<: *build-generic-bullseye-ppc64el
  extends: .build official

generic sid ppc64el build official:
  <<: *build-generic-sid-ppc64el
  extends: .build official

genericcloud buster amd64 build official:
  <<: *build-genericcloud-buster-amd64
  extends: .build official

genericcloud bullseye amd64 build official:
  <<: *build-genericcloud-bullseye-amd64
  extends: .build official

genericcloud sid amd64 build official:
  <<: *build-genericcloud-sid-amd64
  extends: .build official

nocloud stretch amd64 build official:
  <<: *build-nocloud-stretch-amd64
  extends: .build official

nocloud buster amd64 build official:
  <<: *build-nocloud-buster-amd64
  extends: .build official

nocloud bullseye amd64 build official:
  <<: *build-nocloud-bullseye-amd64
  extends: .build official

nocloud sid amd64 build official:
  <<: *build-nocloud-sid-amd64
  extends: .build official

####
# Provider uploads for developer pushs
####

azure upload:
  stage: vendor upload
  image: debian:buster
  script:
    - >
      ./bin/debian-cloud-images upload-azure
      --config-file "${CLOUD_UPLOAD_DEV_CONFIG}"
      *.build.json
  dependencies:
    - azure stretch build
    - azure stretch-backports build
    - azure buster build
    - azure buster-backports build
    - azure bullseye build
    - azure sid build
  only:
    refs:
      - pushes
      - web
    variables:
      - $CLOUD_UPLOAD_AZURE_DEV_ENABLED == "1"
  artifacts:
    name: upload-azure
    expire_in: 7 days
    paths:
      - '*.upload-azure.json'
  allow_failure: true

ec2 upload:
  stage: vendor upload
  image: debian:buster
  script:
    - >
      ./bin/debian-cloud-images upload-ec2
      --config-file "${CLOUD_UPLOAD_DEV_CONFIG}"
      *.build.json
  dependencies:
    - ec2 stretch amd64 build
    - ec2 buster amd64 build
    - ec2 bullseye amd64 build
    - ec2 sid amd64 build
    - ec2 stretch arm64 build
    - ec2 buster arm64 build
    - ec2 bullseye arm64 build
    - ec2 sid arm64 build
  only:
    refs:
      - pushes
      - web
    variables:
      - $CLOUD_UPLOAD_EC2_DEV_ENABLED == "1"
  artifacts:
    name: upload-ec2
    expire_in: 7 days
    paths:
      - '*.upload-ec2.json'
  allow_failure: true

gce upload:
  stage: vendor upload
  image: debian:buster
  script:
    - >
      ./bin/debian-cloud-images upload-gce
      --config-file "${CLOUD_UPLOAD_DEV_CONFIG}"
      *.build.json
  dependencies:
    - gce stretch build
    - gce buster build
    - gce bullseye build
    - gce sid build
  only:
    refs:
      - pushes
      - web
    variables:
      - $CLOUD_UPLOAD_GCE_DEV_ENABLED == "1"
  artifacts:
    name: upload-gce
    expire_in: 7 days
    paths:
      - '*.upload-gce.json'
  allow_failure: true

####
# Provider uploads for daily builds
####

azure upload daily:
  stage: vendor upload
  image: debian:buster
  script:
    # Variables contains secrets!
    - >
      ./bin/debian-cloud-images upload-azure-cloudpartner
      --config-file "${CLOUD_UPLOAD_DAILY_CONFIG}"
      --variant daily
      ${CLOUD_UPLOAD_AZURE_DAILY_NOTIFY_EMAIL:+--publish "${CLOUD_UPLOAD_AZURE_DAILY_NOTIFY_EMAIL}"}
      *.build.json
  dependencies:
    - azure buster build official
    - azure buster-backports build official
    - azure bullseye build official
    - azure sid build official
  only:
    refs:
      - schedules@cloud-team/debian-cloud-images
    variables:
      - $CLOUD_UPLOAD_AZURE_DAILY_ENABLED == "1"
  artifacts:
    name: upload-azure
    expire_in: 7 days
    paths:
      - '*.upload-azure-cloudpartner.json'
  allow_failure: true

ec2 upload daily:
  stage: vendor upload
  image: debian:buster
  script:
    - >
      ./bin/debian-cloud-images upload-ec2
      --config-file "${CLOUD_UPLOAD_DAILY_CONFIG}"
      *.build.json
  dependencies:
    - ec2 buster amd64 build official
    - ec2 bullseye amd64 build official
    - ec2 sid amd64 build official
    - ec2 buster arm64 build official
    - ec2 bullseye arm64 build official
    - ec2 sid arm64 build official
  only:
    refs:
      - schedules@cloud-team/debian-cloud-images
    variables:
      - $CLOUD_UPLOAD_EC2_DAILY_ENABLED == "1"
  artifacts:
    name: upload-ec2
    expire_in: 7 days
    paths:
      - '*.upload-ec2.json'
  allow_failure: true

####
# Own upload for daily builds
####

upload daily:
  stage: upload
  image: debian:buster
  script:
    - apt-get install --no-install-recommends -y sshfs
    - chmod 600 ${CLOUD_UPLOAD_DAILY_SSH_KEY}
    - >
      sshfs
      -o IdentityFile=${CLOUD_UPLOAD_DAILY_SSH_KEY}
      -o VerifyHostKeyDNS=yes
      "${CLOUD_UPLOAD_DAILY_SSH_REMOTE}"
      /mnt
    - >
      ./bin/debian-cloud-images upload
      --variant daily
      --provider cloud.debian.org
      --storage /mnt
      *.json
  only:
    refs:
      - schedules@cloud-team/debian-cloud-images
    variables:
      - $CLOUD_UPLOAD_DAILY_ENABLED == "1"
  tags:
    - debian-cloud-images-upload
  artifacts:
    name: upload
    expire_in: 7 days
    paths:
      - '*.upload.json'
  allow_failure: true
